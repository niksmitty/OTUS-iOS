//
// CharactersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class CharactersAPI {

    /**
     List of characters
     
     - parameter limit: (query) Pagination limit (optional)
     - parameter page: (query) Pagination page (optional)
     - returns: CharactersList
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func charactersGet(limit: Int? = nil, page: Int? = nil) async throws -> CharactersList {
        return try await charactersGetWithRequestBuilder(limit: limit, page: page).execute().body
    }

    /**
     List of characters
     - GET /character/
     - Bearer Token:
       - type: http
       - name: bearerAuth
     - parameter limit: (query) Pagination limit (optional)
     - parameter page: (query) Pagination page (optional)
     - returns: RequestBuilder<CharactersList> 
     */
    open class func charactersGetWithRequestBuilder(limit: Int? = nil, page: Int? = nil) -> RequestBuilder<CharactersList> {
        let localVariablePath = "/character/"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CharactersList>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
